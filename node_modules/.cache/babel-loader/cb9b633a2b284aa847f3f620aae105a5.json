{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/oda/Documents/development/Twitter-viz/src/components/ChoroplethMap/index.js\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\nexport default function ChoroplethMap({\n  crimeData\n}) {\n  const mapDataUrl = `${process.env.PUBLIC_URL}/data/japan.json`;\n  const width = 1000; //描画幅\n\n  const height = 800; //描画高さ\n\n  const centerPos = [137.0, 38.2]; // 地図のセンター位置\n\n  const scale = 1000; // 地図のスケール\n  //地図の描画時の設定\n\n  const projection = d3.geoMercator().center(centerPos).translate([width / 2, height / 2]).scale(scale); //地図をpathに変換\n\n  const path = d3.geoPath().projection(projection);\n  const color = d3.scaleLinear().domain(d3.extent(features, feature => feature.properties.value)).range([\"#ccc\", \"#f00\"]); // SVG要素を追加\n\n  const svg = d3.select(`#map-container`).append(`svg`).attr(`viewBox`, `0 0 ${width} ${height}`).attr(`width`, `100%`).attr(`height`, `100%`);\n  svg.selectAll(`path`).data(geoJson.features).enter().append(`path`).attr(`d`, path).attr(`stroke`, `#666`).attr(`stroke-width`, 0.25).attr(`fill`, `#2566CC`).attr(`fill-opacity`, () => {\n    // メモ\n    // item.properties.name_ja に都道府県名が入っている\n    // 透明度をランダムに指定する (0.0 - 1.0)\n    return Math.random();\n  })\n  /**\n   * 都道府県領域の MouseOver イベントハンドラ\n   */\n  .on(`mouseover`, function (item) {\n    // ラベル用のグループ\n    const group = svg.append(`g`).attr(`id`, `label-group`); // 地図データから都道府県名を取得する\n\n    const label = item.properties.name_ja; // 矩形を追加: テキストの枠\n\n    const rectElement = group.append(`rect`).attr(`id`, `label-rect`).attr(`stroke`, `#666`).attr(`stroke-width`, 0.5).attr(`fill`, `#fff`); // テキストを追加\n\n    const textElement = group.append(`text`).attr(`id`, `label-text`).text(label); // テキストのサイズから矩形のサイズを調整\n\n    const padding = {\n      x: 5,\n      y: 0\n    };\n    const textSize = textElement.node().getBBox();\n    rectElement.attr(`x`, textSize.x - padding.x).attr(`y`, textSize.y - padding.y).attr(`width`, textSize.width + padding.x * 2).attr(`height`, textSize.height + padding.y * 2); // マウス位置の都道府県領域を赤色に変更\n\n    d3.select(this).attr(`fill`, `#CC4C39`);\n    d3.select(this).attr(`stroke-width`, `1`);\n  })\n  /**\n   * 都道府県領域の MouseMove イベントハンドラ\n   */\n  .on(\"mousemove\", function () {\n    // テキストのサイズ情報を取得\n    const textSize = svg.select(\"#label-text\").node().getBBox(); // マウス位置からラベルの位置を指定\n\n    const labelPos = {\n      x: d3.event.offsetX - textSize.width,\n      y: d3.event.offsetY - textSize.height\n    }; // ラベルの位置を移動\n\n    svg.select(\"#label-group\").attr(`transform`, `translate(${labelPos.x}, ${labelPos.y})`);\n  })\n  /**\n   * 都道府県領域の MouseOut イベントハンドラ\n   */\n  .on(`mouseout`, function () {\n    // ラベルグループを削除\n    svg.select(\"#label-group\").remove(); // マウス位置の都道府県領域を青色に戻す\n\n    d3.select(this).attr(`fill`, `#2566CC`);\n    d3.select(this).attr(`stroke-width`, `0.25`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(200,300)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_c = ChoroplethMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChoroplethMap\");","map":{"version":3,"sources":["/Users/oda/Documents/development/Twitter-viz/src/components/ChoroplethMap/index.js"],"names":["React","d3","topojson","ChoroplethMap","crimeData","mapDataUrl","process","env","PUBLIC_URL","width","height","centerPos","scale","projection","geoMercator","center","translate","path","geoPath","color","scaleLinear","domain","extent","features","feature","properties","value","range","svg","select","append","attr","selectAll","data","geoJson","enter","Math","random","on","item","group","label","name_ja","rectElement","textElement","text","padding","x","y","textSize","node","getBBox","labelPos","event","offsetX","offsetY","remove"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\n\nexport default function ChoroplethMap({ crimeData }) {\n\n  const mapDataUrl = `${process.env.PUBLIC_URL}/data/japan.json`;\n\n  const width = 1000;//描画幅\n  const height = 800;//描画高さ\n  const centerPos = [137.0, 38.2]; // 地図のセンター位置\n  const scale = 1000; // 地図のスケール\n\n  //地図の描画時の設定\n  const projection = d3\n    .geoMercator()\n    .center(centerPos)\n    .translate([width/2, height/2])\n    .scale(scale);\n\n  //地図をpathに変換\n  const path = d3.geoPath().projection(projection);\n\n  const color = d3\n    .scaleLinear()\n    .domain(d3.extent(features, (feature) => feature.properties.value))\n    .range([\"#ccc\", \"#f00\"]);\n\n  // SVG要素を追加\n  const svg = d3\n    .select(`#map-container`)\n    .append(`svg`)\n    .attr(`viewBox`, `0 0 ${width} ${height}`)\n    .attr(`width`, `100%`)\n    .attr(`height`, `100%`);\n\n    svg\n    .selectAll(`path`)\n    .data(geoJson.features)\n    .enter()\n    .append(`path`)\n    .attr(`d`, path)\n    .attr(`stroke`, `#666`)\n    .attr(`stroke-width`, 0.25)\n    .attr(`fill`, `#2566CC`)\n    .attr(`fill-opacity`, () => {\n      // メモ\n      // item.properties.name_ja に都道府県名が入っている\n\n      // 透明度をランダムに指定する (0.0 - 1.0)\n      return Math.random();\n    })\n\n    /**\n     * 都道府県領域の MouseOver イベントハンドラ\n     */\n    .on(`mouseover`, function(item: any) {\n      // ラベル用のグループ\n      const group = svg.append(`g`).attr(`id`, `label-group`);\n\n      // 地図データから都道府県名を取得する\n      const label = item.properties.name_ja;\n\n      // 矩形を追加: テキストの枠\n      const rectElement = group\n        .append(`rect`)\n        .attr(`id`, `label-rect`)\n        .attr(`stroke`, `#666`)\n        .attr(`stroke-width`, 0.5)\n        .attr(`fill`, `#fff`);\n\n      // テキストを追加\n      const textElement = group\n        .append(`text`)\n        .attr(`id`, `label-text`)\n        .text(label);\n\n      // テキストのサイズから矩形のサイズを調整\n      const padding = { x: 5, y: 0 };\n      const textSize = textElement.node().getBBox();\n      rectElement\n        .attr(`x`, textSize.x - padding.x)\n        .attr(`y`, textSize.y - padding.y)\n        .attr(`width`, textSize.width + padding.x * 2)\n        .attr(`height`, textSize.height + padding.y * 2);\n\n      // マウス位置の都道府県領域を赤色に変更\n      d3.select(this).attr(`fill`, `#CC4C39`);\n      d3.select(this).attr(`stroke-width`, `1`);\n    })\n\n    /**\n     * 都道府県領域の MouseMove イベントハンドラ\n     */\n    .on(\"mousemove\", function() {\n      // テキストのサイズ情報を取得\n      const textSize = svg\n        .select(\"#label-text\")\n        .node()\n        .getBBox();\n\n      // マウス位置からラベルの位置を指定\n      const labelPos = {\n        x: d3.event.offsetX - textSize.width,\n        y: d3.event.offsetY - textSize.height\n      };\n\n      // ラベルの位置を移動\n      svg\n        .select(\"#label-group\")\n        .attr(`transform`, `translate(${labelPos.x}, ${labelPos.y})`);\n    })\n\n    /**\n     * 都道府県領域の MouseOut イベントハンドラ\n     */\n    .on(`mouseout`, function() {\n      // ラベルグループを削除\n      svg.select(\"#label-group\").remove();\n\n      // マウス位置の都道府県領域を青色に戻す\n      d3.select(this).attr(`fill`, `#2566CC`);\n      d3.select(this).attr(`stroke-width`, `0.25`);\n    });\n\n  return (\n    <div className=\"container mx\">\n      <svg width={width} height={height}>\n        <g transform=\"translate(200,300)\">\n        </g>\n      </svg>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}