{"ast":null,"code":"import * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\nexport default function ChoroplethMap({\n  crimeData\n}) {\n  const width = 400; // 描画サイズ: 幅\n\n  const height = 400; // 描画サイズ: 高さ\n\n  const centerPos = [137.0, 38.2]; // 地図のセンター位置\n\n  const scale = 1000; // 地図のスケール\n  // 地図の投影設定\n\n  const projection = d3.geoMercator().center(centerPos).translate([width / 2, height / 2]).scale(scale); // 地図をpathに投影(変換)\n\n  const path = d3.geoPath().projection(projection); // SVG要素を追加\n\n  const svg = d3.select(`#map-container`).append(`svg`).attr(`viewBox`, `0 0 ${width} ${height}`).attr(`width`, `100%`).attr(`height`, `100%`); // \n  // [ メモ ]\n  // 動的にGeoJsonファイルを読み込む場合は以下のコードを使用\n  // const geoJson = await d3.json(`/japan.geo.json`);\n  // \n  // 都道府県の領域データをpathで描画\n\n  svg.selectAll(`path`).data(geoJson.features).enter().append(`path`).attr(`d`, path).attr(`stroke`, `#666`).attr(`stroke-width`, 0.25).attr(`fill`, `#2566CC`).attr(`fill-opacity`, () => {\n    // メモ\n    // item.properties.name_ja に都道府県名が入っている\n    // 透明度をランダムに指定する (0.0 - 1.0)\n    return Math.random();\n  })\n  /**\n   * 都道府県領域の MouseOver イベントハンドラ\n   */\n  .on(`mouseover`, function () {\n    // ラベル用のグループ\n    const group = svg.append(`g`).attr(`id`, `label-group`); // 地図データから都道府県名を取得する\n\n    const label = item.properties.name_ja; // 矩形を追加: テキストの枠\n\n    const rectElement = group.append(`rect`).attr(`id`, `label-rect`).attr(`stroke`, `#666`).attr(`stroke-width`, 0.5).attr(`fill`, `#fff`); // テキストを追加\n\n    const textElement = group.append(`text`).attr(`id`, `label-text`).text(label); // テキストのサイズから矩形のサイズを調整\n\n    const padding = {\n      x: 5,\n      y: 0\n    };\n    const textSize = textElement.node().getBBox();\n    rectElement.attr(`x`, textSize.x - padding.x).attr(`y`, textSize.y - padding.y).attr(`width`, textSize.width + padding.x * 2).attr(`height`, textSize.height + padding.y * 2); // マウス位置の都道府県領域を赤色に変更\n\n    d3.select(this).attr(`fill`, `#CC4C39`);\n    d3.select(this).attr(`stroke-width`, `1`);\n  })\n  /**\n   * 都道府県領域の MouseMove イベントハンドラ\n   */\n  .on(\"mousemove\", function () {\n    // テキストのサイズ情報を取得\n    const textSize = svg.select(\"#label-text\").node().getBBox(); // マウス位置からラベルの位置を指定\n\n    const labelPos = {\n      x: d3.event.offsetX - textSize.width,\n      y: d3.event.offsetY - textSize.height\n    }; // ラベルの位置を移動\n\n    svg.select(\"#label-group\").attr(`transform`, `translate(${labelPos.x}, ${labelPos.y})`);\n  })\n  /**\n   * 都道府県領域の MouseOut イベントハンドラ\n   */\n  .on(`mouseout`, function () {\n    // ラベルグループを削除\n    svg.select(\"#label-group\").remove(); // マウス位置の都道府県領域を青色に戻す\n\n    d3.select(this).attr(`fill`, `#2566CC`);\n    d3.select(this).attr(`stroke-width`, `0.25`);\n  });\n}\n_c = ChoroplethMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChoroplethMap\");","map":{"version":3,"sources":["/Users/oda/Documents/development/Twitter-viz/src/components/ChoroplethMap/index.js"],"names":["d3","topojson","ChoroplethMap","crimeData","width","height","centerPos","scale","projection","geoMercator","center","translate","path","geoPath","svg","select","append","attr","selectAll","data","geoJson","features","enter","Math","random","on","group","label","item","properties","name_ja","rectElement","textElement","text","padding","x","y","textSize","node","getBBox","labelPos","event","offsetX","offsetY","remove"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\n\nexport default function ChoroplethMap({ crimeData }) {\n\n  const width = 400; // 描画サイズ: 幅\n  const height = 400; // 描画サイズ: 高さ\n  const centerPos = [137.0, 38.2]; // 地図のセンター位置\n  const scale = 1000; // 地図のスケール\n\n  // 地図の投影設定\n  const projection = d3\n    .geoMercator()\n    .center(centerPos)\n    .translate([width / 2, height / 2])\n    .scale(scale);\n\n  // 地図をpathに投影(変換)\n  const path = d3.geoPath().projection(projection);\n\n  // SVG要素を追加\n  const svg = d3\n    .select(`#map-container`)\n    .append(`svg`)\n    .attr(`viewBox`, `0 0 ${width} ${height}`)\n    .attr(`width`, `100%`)\n    .attr(`height`, `100%`);\n\n  // \n  // [ メモ ]\n  // 動的にGeoJsonファイルを読み込む場合は以下のコードを使用\n  // const geoJson = await d3.json(`/japan.geo.json`);\n  // \n\n  // 都道府県の領域データをpathで描画\n  svg\n    .selectAll(`path`)\n    .data(geoJson.features)\n    .enter()\n    .append(`path`)\n    .attr(`d`, path)\n    .attr(`stroke`, `#666`)\n    .attr(`stroke-width`, 0.25)\n    .attr(`fill`, `#2566CC`)\n    .attr(`fill-opacity`, () => {\n      // メモ\n      // item.properties.name_ja に都道府県名が入っている\n\n      // 透明度をランダムに指定する (0.0 - 1.0)\n      return Math.random();\n    })\n\n    /**\n     * 都道府県領域の MouseOver イベントハンドラ\n     */\n    .on(`mouseover`, function() {\n      // ラベル用のグループ\n      const group = svg.append(`g`).attr(`id`, `label-group`);\n\n      // 地図データから都道府県名を取得する\n      const label = item.properties.name_ja;\n\n      // 矩形を追加: テキストの枠\n      const rectElement = group\n        .append(`rect`)\n        .attr(`id`, `label-rect`)\n        .attr(`stroke`, `#666`)\n        .attr(`stroke-width`, 0.5)\n        .attr(`fill`, `#fff`);\n\n      // テキストを追加\n      const textElement = group\n        .append(`text`)\n        .attr(`id`, `label-text`)\n        .text(label);\n\n      // テキストのサイズから矩形のサイズを調整\n      const padding = { x: 5, y: 0 };\n      const textSize = textElement.node().getBBox();\n      rectElement\n        .attr(`x`, textSize.x - padding.x)\n        .attr(`y`, textSize.y - padding.y)\n        .attr(`width`, textSize.width + padding.x * 2)\n        .attr(`height`, textSize.height + padding.y * 2);\n\n      // マウス位置の都道府県領域を赤色に変更\n      d3.select(this).attr(`fill`, `#CC4C39`);\n      d3.select(this).attr(`stroke-width`, `1`);\n    })\n\n    /**\n     * 都道府県領域の MouseMove イベントハンドラ\n     */\n    .on(\"mousemove\", function() {\n      // テキストのサイズ情報を取得\n      const textSize = svg\n        .select(\"#label-text\")\n        .node()\n        .getBBox();\n\n      // マウス位置からラベルの位置を指定\n      const labelPos = {\n        x: d3.event.offsetX - textSize.width,\n        y: d3.event.offsetY - textSize.height\n      };\n\n      // ラベルの位置を移動\n      svg\n        .select(\"#label-group\")\n        .attr(`transform`, `translate(${labelPos.x}, ${labelPos.y})`);\n    })\n\n    /**\n     * 都道府県領域の MouseOut イベントハンドラ\n     */\n    .on(`mouseout`, function() {\n      // ラベルグループを削除\n      svg.select(\"#label-group\").remove();\n\n      // マウス位置の都道府県領域を青色に戻す\n      d3.select(this).attr(`fill`, `#2566CC`);\n      d3.select(this).attr(`stroke-width`, `0.25`);\n    });\n}"]},"metadata":{},"sourceType":"module"}